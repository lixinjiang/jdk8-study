在java程序里，如果同一个类中出现多个名字相同，并且参数类型相同的方法，那么它无法通过编译。也就是说，在正常情况下，
如果我们要在同一个类中定义名字相同的方法，那么他们的参数类型必须不同。这些方法之间的关系我们称之为重载。

小知识：这个限制可以通过字节码工具绕开。也就是说，在编译完成之后，我们可以再向 class 文件中添加方法名和参数类型相同，
而返回类型不同的方法。当这种包括多个方法名相同、参数类型相同，而返回类型不同的方法的类，出现在 Java 编译器的用户类路径上时，
它是怎么确定需要调用哪个方法的呢？当前版本的 Java 编译器会直接选取第一个方法名以及参数类型匹配的方法。
并且，它会根据所选取方法的返回类型来决定可不可以通过编译，以及需不需要进行值转换等。

重载在编译过程中就可完成识别，具体到每一个方法内，java编译器会根据所传入参数的声明类型（注意与实际类型区分）来选取重载方法。选取的分为三阶段：
1、在不考虑对基本类型拆装箱（auto-boxing，auto-unboxing），以及可变长度参数的情况下选取重载方法。
2、如果在第一阶段没找到适配的方法，那么在允许拆装箱，但不允许可变参数的情况下选取重载方法。
3、如果在第二阶段没找到适配的方法，那么子啊允许自动拆装箱以及可变参数的情况下选取重载方法。
